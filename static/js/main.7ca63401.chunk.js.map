{"version":3,"sources":["assets/images/avatar.png","assets/images/bg.jpg","components/HeroImage.js","components/List.js","components/Header.js","components/Date.js","components/Form.js","components/Buttons.js","components/Footer.js","components/Congratulations.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HeroImg","styled","div","_templateObject","img","HeroImage","react_default","a","createElement","Main","li","List_templateObject","List","props","react_transition_group","key","id","in","appear","classNames","timeout","className","style","textDecoration","complete","task","onClick","toggleComplete","react_fontawesome_index_es","icon","faMinusCircle","size","faCheckCircle","faTimesCircle","onDelete","Header_templateObject","Avatar","_templateObject2","Header_Main","Date_templateObject","Date","Date_Main","MainForm","form","Form_templateObject","Form","state","handleChange","e","_this","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","onSubmit","now","time","todo","text","this","onChange","placeholder","Component","Container","Buttons_templateObject","Buttons","tasksToShow","all","active","toggleAll","tasks","some","deleteCompleteTasks","MyFooter","Footer_templateObject","Footer","faHeart","href","h1Style","margin","textAlign","Congratulations","filter","length","Ul","ul","App_templateObject","App_templateObject2","InsideContainer","_templateObject3","App","toggleAllComplete","concat","toConsumableArray","map","updateTasksToShow","s","handleDeleteTask","prevState","objectSpread","componentDidMount","localStorage","getItem","JSON","parse","setItem","stringify","componentDidUpdate","_this2","components_HeroImage","App_Container","Header","components_Form","components_Buttons","components_Congratulations","components_List","components_Date","src_components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ca63401.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.cd5bb108.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.1aa19a65.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport img from \"../assets/images/bg.jpg\";\r\n\r\nconst HeroImg = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: -1;\r\n  background-image: url(${img});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  /* filter: blur(3px); */\r\n  width: 100vw;\r\n  height: 100vh;\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(to right, #800080, #ffc0cb);\r\n    opacity: 0.8;\r\n  }\r\n`;\r\nconst HeroImage = () => {\r\n  return <HeroImg />;\r\n};\r\n\r\nexport default HeroImage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  faCheckCircle,\r\n  faMinusCircle,\r\n  faTimesCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst Main = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .buttons,\r\n  .todo {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 1.3em;\r\n    .check,\r\n    .delete {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      border: 2px solid #800080;\r\n      border-radius: 50px;\r\n      width: 32px;\r\n      height: 32px;\r\n      cursor: pointer;\r\n\r\n      * {\r\n        border-radius: 50px;\r\n        color: #800080;\r\n        background: white;\r\n        transition: 0.3s;\r\n        &:hover {\r\n          color: white;\r\n          background: #800080;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .todo {\r\n    flex-basis: 85%;\r\n    p {\r\n      padding: 10px;\r\n    }\r\n  }\r\n  .buttons {\r\n    flex-basis: 15%;\r\n    justify-content: space-around;\r\n  }\r\n`;\r\n\r\nconst List = props => {\r\n  return (\r\n    <Main>\r\n      <TransitionGroup>\r\n        <CSSTransition\r\n          key={props.id}\r\n          in={true}\r\n          appear\r\n          classNames=\"slide\"\r\n          timeout={600}\r\n        >\r\n          <div\r\n            className=\"todo\"\r\n            style={{\r\n              textDecoration: props.complete ? \"line-through\" : \"\"\r\n            }}\r\n          >\r\n            <p>{props.task}</p>\r\n          </div>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n      <div className=\"buttons\">\r\n        <div className=\"check\" onClick={props.toggleComplete}>\r\n          {props.complete ? (\r\n            <FontAwesomeIcon icon={faMinusCircle} size=\"lg\" />\r\n          ) : (\r\n            <FontAwesomeIcon icon={faCheckCircle} size=\"lg\" />\r\n          )}\r\n        </div>\r\n        <div className=\"delete\">\r\n          {props.complete ? (\r\n            <FontAwesomeIcon\r\n              icon={faTimesCircle}\r\n              size=\"lg\"\r\n              onClick={props.onDelete}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport img from \"../assets/images/avatar.png\";\r\n\r\nconst Main = styled.div`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  padding: 20px;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  .info {\r\n    padding-left: 20px;\r\n  }\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  background-image: url(${img});\r\n  background-position: center;\r\n  background-size: cover;\r\n  width: 80px;\r\n  height: 80px;\r\n  z-index: 50000;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst List = () => {\r\n  return (\r\n    <Main>\r\n      <Avatar />\r\n      <div className=\"info\">\r\n        <h2>John Doe</h2>\r\n        <p> Front-End Developer</p>\r\n      </div>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Main = styled.div`\r\n  position: absolute;\r\n  top: 5%;\r\n  width: 10%;\r\n  height: 80%;\r\n  right: calc(-10% + 5%);\r\n  background-color: #800080;\r\n  color: white;\r\n  z-index: -1;\r\n  border-radius: 0 5px 5px 0;\r\n  p {\r\n    font-size: 0.8em;\r\n    padding: 10px;\r\n    span {\r\n      font-size: 40px;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 15%;\r\n    right: calc(-15% + 5%);\r\n  }\r\n  @media (max-width: 1024px) {\r\n    width: 20%;\r\n    right: calc(-20% + 5%);\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 25%;\r\n    right: calc(-25% + 5%);\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Date = () => {\r\n  return (\r\n    <Main>\r\n      <p>\r\n        <span>02</span> Feb 2018 Monday\r\n      </p>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Date;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MainForm = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  input {\r\n    padding: 10px;\r\n    border: none;\r\n    border-bottom: 2px solid rgba(0, 0, 0, 0.8);\r\n    background: transparent;\r\n    text-align: center;\r\n    outline: none;\r\n    width: 50%;\r\n    transition: 0.3s;\r\n    &:hover {\r\n      box-shadow: 0px 15px 15px -12px rgba(0, 0, 0, 0.5);\r\n    }\r\n  }\r\n  button {\r\n    padding: 10px 5%;\r\n    margin: 0 5%;\r\n    background: transparent;\r\n    border: 2px solid #800080;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    transition: 0.3s;\r\n    &:hover {\r\n      background: #800080;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nclass Form extends Component {\r\n  state = {};\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({\r\n      id: Date.now(),\r\n      time: \"00.00\",\r\n      todo: this.state.text,\r\n      complete: false,\r\n      appear: true\r\n    });\r\n\r\n    this.setState({\r\n      text: \"\"\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <MainForm onSubmit={this.handleSubmit}>\r\n        <input\r\n          value={this.state.text}\r\n          onChange={this.handleChange}\r\n          name=\"text\"\r\n          placeholder=\"Add task\"\r\n        />\r\n        <button onClick={this.handleSubmit}>ADD</button>\r\n      </MainForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    margin: 0 auto;\r\n    width: 90%;\r\n    button {\r\n      flex-basis: 33.3333%;\r\n    }\r\n  }\r\n  button {\r\n    padding: 5px 5%;\r\n    background: transparent;\r\n    border: 2px solid #800080;\r\n    margin: 5px 0;\r\n    cursor: pointer;\r\n    outline: none;\r\n    transition: 0.3s;\r\n    &:hover {\r\n      background: #800080;\r\n      color: white;\r\n    }\r\n    &.active {\r\n      background: #800080;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Buttons = props => {\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <button\r\n          className={props.tasksToShow === \"all\" ? \"active\" : null}\r\n          onClick={props.all}\r\n        >\r\n          ALL\r\n        </button>\r\n        <button\r\n          className={props.tasksToShow === \"active\" ? \"active\" : null}\r\n          onClick={props.active}\r\n        >\r\n          ACTIVE\r\n        </button>\r\n        <button\r\n          className={props.tasksToShow === \"complete\" ? \"active\" : null}\r\n          onClick={props.complete}\r\n        >\r\n          COMPLETE\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button onClick={props.toggleAll}>TOGGLE ALL COMPLETE</button>\r\n        {props.tasks.some(task => task.complete) ? (\r\n          <button onClick={props.deleteCompleteTasks}>\r\n            DELETE ALL COMPLETED\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faHeart, faGithub } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Footer.css\";\r\n\r\nconst MyFooter = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 50px;\r\n  color: rgba(255, 255, 255, 0.9);\r\n  @media (max-width: 1024px) {\r\n    font-size: 14px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <MyFooter>\r\n      <h2>\r\n        Created with\r\n        <FontAwesomeIcon icon={faHeart} size=\"sm\" />\r\n        by Mateusz Dominiak\r\n        <a href=\"https://github.com/gitmatheo\">\r\n          {/* <FontAwesomeIcon icon={faGithub} size=\"lg\" /> */}\r\n        </a>\r\n      </h2>\r\n    </MyFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst h1Style = {\r\n  margin: \"0 auto\",\r\n  textAlign: \"center\"\r\n};\r\n\r\nconst Congratulations = props => {\r\n  return (\r\n    <h3 style={h1Style}>\r\n      {props.tasks.filter(task => !task.complete).length === 0\r\n        ? \"You have no more tasks to do.\"\r\n        : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default Congratulations;\r\n","import React, { Component } from \"react\";\nimport HeroImage from \"./HeroImage.js\";\nimport List from \"./List.js\";\nimport Header from \"./Header.js\";\nimport Date from \"./Date.js\";\nimport Form from \"./Form.js\";\nimport Buttons from \"./Buttons.js\";\nimport Footer from \"./Footer.js\";\nimport Congratulations from \"./Congratulations.js\";\nimport { CSSTransition } from \"react-transition-group\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport \"../assets/images/avatar.png\";\n\n//Global Styles for styled components\n// const GlobalStyle = createGlobalStyle`\n// * {\n//   box-sizing: border-box;\n//   padding: 0;\n//   margin: 0;\n// }\n//   body {\n//     color: ${props => (props.whiteColor ? \"white\" : \"black\")};\n//     font-family: 'Montserrat', sans-serif;\n//     font-size: 12px;\n//   }\n//   @media (max-width: 768px) {\n//   body {\n//     font-size: 9px;\n//   }\n// }\n\n// @media (max-width: 480px) {\n//   body {\n//     font-size: 7.5px;\n//   }\n// }\n// `;\n\nconst Ul = styled.ul`\n  margin: 20px;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 5px;\n  box-shadow: 0 10px 20px -8px rgba(0, 0, 0, 0.8),\n    10px 0px 20px -8px rgba(0, 0, 0, 0.5);\n  width: 60vw;\n\n  @media (max-width: 768px) {\n    width: 75vw;\n    margin-left: -5vw;\n  }\n\n  @media (max-width: 480px) {\n    margin-left: 0;\n    width: 90vw;\n  }\n`;\n\nconst InsideContainer = styled.div`\n  width: 95%;\n  min-height: 30vh;\n  box-shadow: 10px 0px 20px -12px rgba(0, 0, 0, 0.5);\n  div.number-of-tasks {\n    text-align: center;\n    padding: 10px;\n  }\n`;\n\nclass App extends Component {\n  state = {\n    tasks: [\n      {\n        id: 1,\n        todo: \"Do workout\",\n        complete: false,\n        appear: true\n      },\n      {\n        id: 2,\n        todo: \"Check emails\",\n        complete: false,\n        appear: true\n      },\n      {\n        id: 3,\n        todo: \"Visit Grandma\",\n        complete: false,\n        appear: true\n      },\n      {\n        id: 4,\n        todo: \"Go to the doctor\",\n        complete: false,\n        appear: true\n      }\n    ],\n    tasksToShow: \"all\",\n    toggleAllComplete: true\n  };\n\n  onSubmit = task => {\n    if (task.todo !== \"\") {\n      this.setState({\n        tasks: [task, ...this.state.tasks]\n      });\n    }\n  };\n\n  toggleComplete = id => {\n    this.setState({\n      tasks: this.state.tasks.map(task => {\n        if (task.id === id) {\n          return {\n            id: task.id,\n            todo: task.todo,\n            complete: !task.complete\n          };\n        } else {\n          return task;\n        }\n      })\n    });\n  };\n\n  updateTasksToShow = s => {\n    this.setState({\n      tasksToShow: s\n    });\n  };\n\n  handleDeleteTask = (id, appear) => {\n    this.setState({\n      appear: !this.state.tasks.appear,\n      tasks: this.state.tasks.filter(task => task.id !== id)\n    });\n  };\n\n  deleteCompleteTasks = () => {\n    this.setState({\n      tasks: this.state.tasks.filter(task => !task.complete)\n    });\n  };\n\n  toggleAll = () => {\n    this.setState(prevState => ({\n      tasks: prevState.tasks.map(task => ({\n        ...task,\n        complete: prevState.toggleAllComplete\n      })),\n      toggleAllComplete: !prevState.toggleAllComplete\n    }));\n  };\n\n  //local storage\n\n  componentDidMount = () => {\n    if (!localStorage.getItem(\"todo\")) {\n      localStorage.setItem(\"todo\", JSON.stringify(this.state.tasks));\n    } else {\n      this.setState({\n        tasks: JSON.parse(localStorage.getItem(\"todo\"))\n      });\n    }\n  };\n\n  componentDidUpdate = () => {\n    localStorage.setItem(\"todo\", JSON.stringify(this.state.tasks));\n  };\n\n  render() {\n    let tasks = [];\n    if (this.state.tasksToShow === \"all\") {\n      tasks = this.state.tasks;\n    } else if (this.state.tasksToShow === \"active\") {\n      tasks = this.state.tasks.filter(task => !task.complete);\n    } else if (this.state.tasksToShow === \"complete\") {\n      tasks = this.state.tasks.filter(task => task.complete);\n    }\n    return (\n      <div className=\"App\">\n        {/* <GlobalStyle /> */}\n        <HeroImage />\n        <CSSTransition in={true} appear={true} classNames=\"fade\" timeout={1000}>\n          <Container>\n            <InsideContainer>\n              <Header />\n\n              <Form onSubmit={this.onSubmit} />\n              <div className=\"number-of-tasks\">\n                Number of tasks todo:\n                <strong>\n                  {this.state.tasks.filter(task => !task.complete).length}\n                </strong>\n              </div>\n\n              <Buttons\n                all={() => this.updateTasksToShow(\"all\")}\n                active={() => this.updateTasksToShow(\"active\")}\n                complete={() => this.updateTasksToShow(\"complete\")}\n                toggleAll={() => this.toggleAll()}\n                tasks={this.state.tasks}\n                deleteCompleteTasks={this.deleteCompleteTasks}\n                tasksToShow={this.state.tasksToShow}\n              />\n              <Congratulations tasks={this.state.tasks} />\n              <Ul>\n                {tasks.map(task => (\n                  <List\n                    key={task.id}\n                    toggleComplete={() => this.toggleComplete(task.id)}\n                    onDelete={() => this.handleDeleteTask(task.id, task.appear)}\n                    task={task.todo}\n                    time={task.time}\n                    complete={task.complete}\n                    appear={task.appear}\n                    id={task.id}\n                  />\n                ))}\n              </Ul>\n            </InsideContainer>\n            <Date />\n          </Container>\n        </CSSTransition>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
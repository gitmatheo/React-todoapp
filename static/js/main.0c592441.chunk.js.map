{"version":3,"sources":["assets/images/avatar.png","assets/images/bg.jpg","components/HeroImage.js","components/Task.js","components/ListOfTasks.js","components/Header.js","components/Date.js","components/Form.js","components/Buttons.js","components/Footer.js","components/Congratulations.js","components/NumberOfTasksToDo.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HeroImg","styled","div","_templateObject","img","HeroImage","react_default","a","createElement","Main","li","Task_templateObject","Task","props","_props$task","task","id","todo","complete","react_transition_group","key","in","appear","classNames","timeout","className","style","textDecoration","react_fontawesome_index_es","onClick","toggleComplete","icon","faMinusCircle","size","faCheckCircle","faTimesCircle","onDelete","ListOfTasks","Fragment","tasks","map","components_Task","Header_templateObject","Avatar","_templateObject2","List","Header_Main","Date_templateObject","d","window","Date","monthName","getMonth","dayName","getDay","dayToShow","getDate","dateToShow","concat","getFullYear","Date_Main","MainForm","form","Form_templateObject","Form","state","handleChange","e","_this","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","onSubmit","now","time","text","this","onChange","placeholder","Component","Container","Buttons_templateObject","Buttons","tasksToShow","all","active","toggleAll","some","deleteCompleteTasks","MyFooter","Footer_templateObject","Footer","faHeart","href","faGithub","h1Style","margin","textAlign","Congratulations","filter","length","Div","NumberOfTasksToDo_templateObject","NumberOfTasksToDo","Ul","ul","App_templateObject","App_templateObject2","InsideContainer","_templateObject3","App","toggleAllComplete","toConsumableArray","console","log","updateTasksToShow","s","handleDeleteTask","prevState","objectSpread","componentDidMount","localStorage","getItem","JSON","parse","setItem","stringify","componentDidUpdate","_this2","components_HeroImage","App_Container","Header","components_Form","components_NumberOfTasksToDo","components_Buttons","components_Congratulations","components_ListOfTasks","components_Date","src_components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c592441.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.cd5bb108.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.1aa19a65.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport img from \"../assets/images/bg.jpg\";\r\n\r\nconst HeroImg = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: -1;\r\n  background-image: url(${img});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  /* filter: blur(3px); */\r\n  width: 100vw;\r\n  height: 100vh;\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(to right, #800080, #ffc0cb);\r\n    opacity: 0.8;\r\n  }\r\n`;\r\nconst HeroImage = () => {\r\n  return <HeroImg />;\r\n};\r\n\r\nexport default HeroImage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  faCheckCircle,\r\n  faMinusCircle,\r\n  faTimesCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst Main = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .buttons,\r\n  .todo {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 1.3em;\r\n    .check,\r\n    .delete {\r\n      cursor: pointer;\r\n      border: 2px solid #800080;\r\n      border-radius: 50px;\r\n      width: 32px;\r\n      height: 32px;\r\n      color: #800080;\r\n      background: white;\r\n      transition: 0.3s;\r\n      &:hover {\r\n        color: white;\r\n        background: #800080;\r\n      }\r\n    }\r\n  }\r\n  .todo {\r\n    flex-basis: 85%;\r\n    p {\r\n      padding: 10px;\r\n    }\r\n  }\r\n  .buttons {\r\n    flex-basis: 15%;\r\n    justify-content: space-around;\r\n    * {\r\n      margin: 0 3px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Task = props => {\r\n  const { id, todo, complete } = props.task;\r\n  return (\r\n    <Main>\r\n      <TransitionGroup>\r\n        <CSSTransition\r\n          key={id}\r\n          in={true}\r\n          appear\r\n          classNames=\"slide\"\r\n          timeout={600}\r\n        >\r\n          <div\r\n            className=\"todo\"\r\n            style={{\r\n              textDecoration: complete ? \"line-through\" : \"\"\r\n            }}\r\n          >\r\n            <p>{todo}</p>\r\n          </div>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n      <div className=\"buttons\">\r\n        {complete ? (\r\n          <FontAwesomeIcon\r\n            onClick={() => props.toggleComplete(id)}\r\n            className=\"check\"\r\n            icon={faMinusCircle}\r\n            size=\"lg\"\r\n          />\r\n        ) : (\r\n          <FontAwesomeIcon\r\n            onClick={() => props.toggleComplete(id)}\r\n            className=\"check\"\r\n            icon={faCheckCircle}\r\n            size=\"lg\"\r\n          />\r\n        )}\r\n\r\n        {complete ? (\r\n          <FontAwesomeIcon\r\n            className=\"delete\"\r\n            icon={faTimesCircle}\r\n            size=\"lg\"\r\n            onClick={() => props.onDelete(id)}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst ListOfTasks = props => {\r\n  return (\r\n    <>\r\n      {props.tasks.map(task => (\r\n        <Task\r\n          task={task}\r\n          key={task.id}\r\n          toggleComplete={props.toggleComplete}\r\n          onDelete={props.onDelete}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListOfTasks;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport img from \"../assets/images/avatar.png\";\r\n\r\nconst Main = styled.div`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  padding: 20px;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  .info {\r\n    padding-left: 20px;\r\n  }\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  background-image: url(${img});\r\n  background-position: center;\r\n  background-size: cover;\r\n  width: 80px;\r\n  height: 80px;\r\n  z-index: 50000;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst List = () => {\r\n  return (\r\n    <Main>\r\n      <Avatar />\r\n      <div className=\"info\">\r\n        <h2>John Doe</h2>\r\n        <p> Front-End Developer</p>\r\n      </div>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Main = styled.div`\r\n  position: absolute;\r\n  top: 50px;\r\n  width: 10%;\r\n  height: 80%;\r\n  right: calc(-10% + 5%);\r\n  background-color: #800080;\r\n  color: white;\r\n  border-radius: 0 5px 5px 0;\r\n  p {\r\n    font-size: 1.1em;\r\n    padding: 10px;\r\n    span {\r\n      font-size: 45px;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 15%;\r\n    right: calc(-15% + 5%);\r\n  }\r\n  @media (max-width: 1024px) {\r\n    width: 20%;\r\n    right: calc(-20% + 5%);\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 15%;\r\n    right: calc(-15% + 5%);\r\n    p {\r\n      font-size: 0.9em;\r\n      padding: 10px;\r\n      span {\r\n        font-size: 35px;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n    /* display: none; */\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst monthNames = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\"\r\n];\r\n\r\nconst dayNames = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\"\r\n];\r\n\r\nconst d = new window.Date();\r\nconst monthName = monthNames[d.getMonth()];\r\nconst dayName = dayNames[d.getDay()];\r\n\r\nconst dayToShow = d.getDate();\r\nconst dateToShow = `${monthName} ${d.getFullYear()} ${dayName}`;\r\n\r\nconst Date = () => {\r\n  return (\r\n    <Main>\r\n      <p>\r\n        <span>{dayToShow}</span>\r\n      </p>\r\n      <p> {dateToShow}</p>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Date;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MainForm = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  input {\r\n    padding: 10px;\r\n    border: none;\r\n    border-bottom: 2px solid rgba(0, 0, 0, 0.8);\r\n    background: transparent;\r\n    text-align: center;\r\n    outline: none;\r\n    width: 50%;\r\n    transition: 0.3s;\r\n    &:hover {\r\n      box-shadow: 0px 15px 15px -12px rgba(0, 0, 0, 0.5);\r\n    }\r\n  }\r\n  button {\r\n    padding: 10px 5%;\r\n    margin: 0 5%;\r\n    background: transparent;\r\n    border: 2px solid #800080;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    transition: 0.3s;\r\n    &:hover {\r\n      background: #800080;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nclass Form extends Component {\r\n  state = {};\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({\r\n      id: Date.now(),\r\n      time: \"00.00\",\r\n      todo: this.state.text,\r\n      complete: false,\r\n      appear: true\r\n    });\r\n\r\n    this.setState({\r\n      text: \"\"\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <MainForm onSubmit={this.handleSubmit}>\r\n        <input\r\n          value={this.state.text}\r\n          onChange={this.handleChange}\r\n          name=\"text\"\r\n          placeholder=\"Add task\"\r\n        />\r\n        <button onClick={this.handleSubmit}>ADD</button>\r\n      </MainForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    margin: 0 auto;\r\n    width: 90%;\r\n    button {\r\n      flex-basis: 33.3333%;\r\n    }\r\n  }\r\n  button {\r\n    padding: 5px 5%;\r\n    background: transparent;\r\n    border: 2px solid #800080;\r\n    margin: 5px 0;\r\n    cursor: pointer;\r\n    outline: none;\r\n    transition: 0.3s;\r\n    &:hover {\r\n      background: #800080;\r\n      color: white;\r\n    }\r\n    &.active {\r\n      background: #800080;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Buttons = props => {\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <button\r\n          className={props.tasksToShow === \"all\" ? \"active\" : null}\r\n          onClick={props.all}\r\n        >\r\n          ALL\r\n        </button>\r\n        <button\r\n          className={props.tasksToShow === \"active\" ? \"active\" : null}\r\n          onClick={props.active}\r\n        >\r\n          ACTIVE\r\n        </button>\r\n        <button\r\n          className={props.tasksToShow === \"complete\" ? \"active\" : null}\r\n          onClick={props.complete}\r\n        >\r\n          COMPLETE\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button onClick={props.toggleAll}>TOGGLE ALL COMPLETE</button>\r\n        {props.tasks.some(task => task.complete) ? (\r\n          <button onClick={props.deleteCompleteTasks}>\r\n            DELETE ALL COMPLETED\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGithub } from \"@fortawesome/fontawesome-free-brands\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Footer.css\";\r\n\r\nconst MyFooter = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 50px;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 25px;\r\n  * {\r\n    color: rgba(255, 255, 255, 0.8);\r\n  }\r\n  .heart {\r\n    font-size: 35px;\r\n    animation: heartbeat 0.6s ease-out infinite alternate;\r\n  }\r\n  a {\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    :hover {\r\n      color: white;\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n  @media (max-width: 1024px) {\r\n    font-size: 20px;\r\n    .heart {\r\n      font-size: 30px;\r\n    }\r\n  }\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n    .heart {\r\n      font-size: 26px;\r\n    }\r\n  }\r\n\r\n  @keyframes heartbeat {\r\n    from {\r\n      transform: scale(0.9);\r\n    }\r\n    to {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <MyFooter>\r\n      Created with &nbsp;\r\n      <FontAwesomeIcon className=\"heart\" icon={faHeart} size=\"sm\" /> &nbsp; by\r\n      Mateusz Dominiak &nbsp;\r\n      <a href=\"https://github.com/gitmatheo\">\r\n        <FontAwesomeIcon icon={faGithub} size=\"lg\" />\r\n      </a>\r\n    </MyFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst h1Style = {\r\n  margin: \"0 auto\",\r\n  textAlign: \"center\"\r\n};\r\n\r\nconst Congratulations = props => {\r\n  return (\r\n    <h3 style={h1Style}>\r\n      {props.tasks.filter(task => !task.complete).length === 0\r\n        ? \"You have no more tasks to do.\"\r\n        : null}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default Congratulations;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Div = styled.div`\r\n  text-align: center;\r\n  padding: 10px;\r\n`;\r\nconst NumberOfTasksToDo = props => {\r\n  return (\r\n    <Div className=\"number-of-tasks\">\r\n      Number of tasks todo:&nbsp;\r\n      <strong>{props.tasks.filter(task => !task.complete).length}</strong>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default NumberOfTasksToDo;\r\n","import React, { Component } from \"react\";\nimport HeroImage from \"./HeroImage.js\";\nimport ListOfTasks from \"./ListOfTasks.js\";\nimport Header from \"./Header.js\";\nimport Date from \"./Date.js\";\nimport Form from \"./Form.js\";\nimport Buttons from \"./Buttons.js\";\nimport Footer from \"./Footer.js\";\nimport Congratulations from \"./Congratulations.js\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport \"../assets/images/avatar.png\";\nimport NumberOfTasksToDo from \"./NumberOfTasksToDo.js\";\n\nconst Ul = styled.ul`\n  margin: 20px;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 5px;\n  box-shadow: 0px 10px 30px -8px rgba(0, 0, 0, 0.3),\n    10px 0px 30px -8px rgba(0, 0, 0, 0.3),\n    -10px 0px 30px -8px rgba(0, 0, 0, 0.3),\n    0px -10px 30px -8px rgba(0, 0, 0, 0.3);\n  width: 60vw;\n  margin: 10% auto;\n\n  @media (max-width: 768px) {\n    width: 75vw;\n  }\n\n  @media (max-width: 480px) {\n    width: 90vw;\n    margin: 10% auto;\n  }\n`;\n\nconst InsideContainer = styled.div`\n  width: 95%;\n  min-height: 30vh;\n  box-shadow: 10px 0px 20px -12px rgba(0, 0, 0, 0.5);\n  z-index: 10000;\n`;\n\nclass App extends Component {\n  state = {\n    tasks: [\n      {\n        id: 1,\n        todo: \"Do workout\",\n        complete: false,\n        appear: true\n      },\n      {\n        id: 2,\n        todo: \"Check emails\",\n        complete: false,\n        appear: true\n      },\n      {\n        id: 3,\n        todo: \"Visit Grandma\",\n        complete: false,\n        appear: true\n      },\n      {\n        id: 4,\n        todo: \"Go to the doctor\",\n        complete: false,\n        appear: true\n      }\n    ],\n    tasksToShow: \"all\",\n    toggleAllComplete: true\n  };\n\n  onSubmit = task => {\n    if (task.todo !== \"\") {\n      this.setState({\n        tasks: [task, ...this.state.tasks]\n      });\n    }\n  };\n\n  toggleComplete = id => {\n    console.log(\"toggle complete o ID \" + id);\n    this.setState({\n      tasks: this.state.tasks.map(task => {\n        if (task.id === id) {\n          return {\n            id: task.id,\n            todo: task.todo,\n            complete: !task.complete\n          };\n        } else {\n          return task;\n        }\n      })\n    });\n  };\n\n  updateTasksToShow = s => {\n    this.setState({\n      tasksToShow: s\n    });\n  };\n\n  handleDeleteTask = (id, appear) => {\n    this.setState({\n      appear: !this.state.tasks.appear,\n      tasks: this.state.tasks.filter(task => task.id !== id)\n    });\n  };\n\n  deleteCompleteTasks = () => {\n    this.setState({\n      tasks: this.state.tasks.filter(task => !task.complete)\n    });\n  };\n\n  toggleAll = () => {\n    this.setState(prevState => ({\n      tasks: prevState.tasks.map(task => ({\n        ...task,\n        complete: prevState.toggleAllComplete\n      })),\n      toggleAllComplete: !prevState.toggleAllComplete\n    }));\n  };\n\n  //local storage\n\n  componentDidMount = () => {\n    if (!localStorage.getItem(\"todo\")) {\n      localStorage.setItem(\"todo\", JSON.stringify(this.state.tasks));\n    } else {\n      this.setState({\n        tasks: JSON.parse(localStorage.getItem(\"todo\"))\n      });\n    }\n  };\n\n  componentDidUpdate = () => {\n    localStorage.setItem(\"todo\", JSON.stringify(this.state.tasks));\n  };\n\n  render() {\n    let tasks = [];\n    if (this.state.tasksToShow === \"all\") {\n      tasks = this.state.tasks;\n    } else if (this.state.tasksToShow === \"active\") {\n      tasks = this.state.tasks.filter(task => !task.complete);\n    } else if (this.state.tasksToShow === \"complete\") {\n      tasks = this.state.tasks.filter(task => task.complete);\n    }\n    return (\n      <div className=\"App\">\n        <HeroImage />\n        <Container>\n          <InsideContainer>\n            <Header />\n            <Form onSubmit={this.onSubmit} />\n\n            <NumberOfTasksToDo tasks={this.state.tasks} />\n\n            <Buttons\n              all={() => this.updateTasksToShow(\"all\")}\n              active={() => this.updateTasksToShow(\"active\")}\n              complete={() => this.updateTasksToShow(\"complete\")}\n              toggleAll={() => this.toggleAll()}\n              tasks={this.state.tasks}\n              deleteCompleteTasks={this.deleteCompleteTasks}\n              tasksToShow={this.state.tasksToShow}\n            />\n            <Congratulations tasks={this.state.tasks} />\n            <Ul>\n              <ListOfTasks\n                tasks={this.state.tasks}\n                toggleComplete={this.toggleComplete}\n                onDelete={this.handleDeleteTask}\n              />\n            </Ul>\n          </InsideContainer>\n          <Date />\n        </Container>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}